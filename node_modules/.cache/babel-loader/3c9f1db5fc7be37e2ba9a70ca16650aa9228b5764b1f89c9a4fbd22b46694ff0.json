{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Victor Manuel\\\\Desktop\\\\Web Copy Style\\\\LoteriaListas\\\\loteria-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport { LOTERIA_CARDS } from './cards';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [numTables, setNumTables] = useState(1);\n  const [tables, setTables] = useState([]);\n  const [tableColors, setTableColors] = useState([]);\n  const generateTables = () => {\n    const generatedTables = new Set();\n    const colors = [];\n    while (generatedTables.size < numTables) {\n      const shuffledCards = shuffleArray([...LOTERIA_CARDS]);\n      const table = shuffledCards.slice(0, 16);\n      const tableKey = table.join(',');\n      if (!generatedTables.has(tableKey)) {\n        generatedTables.add(tableKey);\n        colors.push(getRandomColor());\n      }\n    }\n    setTables(Array.from(generatedTables).map(key => key.split(',')));\n    setTableColors(colors);\n  };\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n  const getRandomColor = () => {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Generador de Tablas de Loter\\xEDa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"N\\xFAmero de tablas:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: numTables,\n        onChange: e => setNumTables(Number(e.target.value)),\n        min: \"1\",\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateTables,\n      children: \"Generar Tablas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"tables-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tables\",\n        children: tables.map((table, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table\",\n          style: {\n            backgroundColor: tableColors[index]\n          },\n          children: table.map((card, cardIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: card\n          }, cardIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m1GMEDrv7h+wxgF82jbpzZk0K4Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","LOTERIA_CARDS","jsxDEV","_jsxDEV","App","_s","numTables","setNumTables","tables","setTables","tableColors","setTableColors","generateTables","generatedTables","Set","colors","size","shuffledCards","shuffleArray","table","slice","tableKey","join","has","add","push","getRandomColor","Array","from","map","key","split","array","i","length","j","Math","floor","random","letters","color","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","Number","target","min","max","onClick","index","style","backgroundColor","card","cardIndex","_c","$RefreshReg$"],"sources":["C:/Users/Victor Manuel/Desktop/Web Copy Style/LoteriaListas/loteria-app/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport { LOTERIA_CARDS } from './cards';\nimport './App.css';\n\nfunction App() {\n  const [numTables, setNumTables] = useState(1);\n  const [tables, setTables] = useState([]);\n  const [tableColors, setTableColors] = useState([]);\n\n  const generateTables = () => {\n    const generatedTables = new Set();\n    const colors = [];\n\n    while (generatedTables.size < numTables) {\n      const shuffledCards = shuffleArray([...LOTERIA_CARDS]);\n      const table = shuffledCards.slice(0, 16);\n      const tableKey = table.join(',');\n\n      if (!generatedTables.has(tableKey)) {\n        generatedTables.add(tableKey);\n        colors.push(getRandomColor());\n      }\n    }\n\n    setTables(Array.from(generatedTables).map(key => key.split(',')));\n    setTableColors(colors);\n  };\n\n  const shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n  const getRandomColor = () => {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Generador de Tablas de Lotería</h1>\n      <label>\n        Número de tablas:\n        <input\n          type=\"number\"\n          value={numTables}\n          onChange={(e) => setNumTables(Number(e.target.value))}\n          min=\"1\"\n          max=\"100\"\n        />\n      </label>\n      <button onClick={generateTables}>Generar Tablas</button>\n      <article className=\"tables-container\">\n        <div className=\"tables\">\n          {tables.map((table, index) => (\n            <div\n              key={index}\n              className=\"table\"\n              style={{ backgroundColor: tableColors[index] }}\n            >\n              {table.map((card, cardIndex) => (\n                <div key={cardIndex} className=\"card\">{card}</div>\n              ))}\n            </div>\n          ))}\n        </div>\n      </article>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}